---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: cluter-upgrad2
  region: us-east-1
    #version: "1.20" # kubernetes version
vpc:
  id: "vpc-0c87e097d8c0661e1"
  subnets:
    private:
      private-a:
          az: "us-east-1a"
          id: "subnet-032f4291f85b9a764"
      private-b:
          az: "us-east-1b"
          id: "subnet-060fe3c5c37ee3fc1"
    public:
      public-a:
          az: "us-east-1a"
          id: "subnet-0bd781b0608f04cd3"
      public-b:
          az: "us-east-1b"
          id: "subnet-0095b94acc3099e33"
  clusterEndpoints:
    publicAccess: true
    privateAccess: true
  nat:
    gateway: Disable

iam: # Refer: https://eksctl.io/usage/iamserviceaccounts/
  withOIDC: true
  serviceAccounts: # pre-including some common iamserviceaccounts
  - metadata:
      name: aws-load-balancer-controller
      namespace: kube-system
    wellKnownPolicies:
      awsLoadBalancerController: true
  - metadata:
      name: ebs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      ebsCSIController: true
  - metadata:
      name: efs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      efsCSIController: true
  - metadata:
      name: external-dns
      namespace: kube-system
    wellKnownPolicies:
      externalDNS: true
  - metadata:
      name: cert-manager
      namespace: cert-manager
    wellKnownPolicies:
      certManager: true
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
      labels: {aws-usage: "cluster-ops"}
    wellKnownPolicies:
      autoScaler: true

nodeGroups: # Refer: https://github.com/weaveworks/eksctl/blob/main/examples/05-advanced-nodegroups.yaml
  - name: private-a
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true" # tag is needed for cluster autoscaler. Refer: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md#auto-discovery-setup
      k8s.io/cluster-autoscaler/cluter-upgrad2: "shared" # cluster name tag is optional in latest versions of EKS
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 1
    minSize: 1
    maxSize: 3
    privateNetworking: true # include only in private subnet
    subnets:
      - private-a # 1 AZ is enough for testing
  - name: public-a
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/cluter-upgrad2: "shared"
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 1
    minSize: 1
    maxSize: 1
    subnets:
      - public-a
  - name: private-b
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true" # tag is needed for cluster autoscaler. Refer: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md#auto-discovery-setup
      k8s.io/cluster-autoscaler/cluter-upgrad2: "shared" # cluster name tag is optional in latest versions of EKS
    instancesDistribution:
      instanceTypes:
        - t2.medium
    taints:
      - key: app
        value: "sample-app"
        effect: NoSchedule
    desiredCapacity: 1
    minSize: 0
    maxSize: 5
    privateNetworking: true # include only in private subnet
    subnets:
      - private-b
